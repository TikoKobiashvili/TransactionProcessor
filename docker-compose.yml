version: '3.8'  # Updated version for better features

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      #      - postgres_data:/var/lib/postgresql/data
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s


  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    #      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q status" ]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  keydb:
    image: eqalpha/keydb
    command: keydb-server --appendonly yes
    volumes:
      #      - keydb_data:/data
      - ./keydb_data:/data

    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "keydb-cli ping | grep PONG" ]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  app:
    build: .
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_HOST=rabbitmq
      - KEYDB_HOST=keydb
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      keydb:
        condition: service_healthy
    volumes:
      - .:/app
    command: python -u app/main.py

#volumes:
#  postgres_data:
#  rabbitmq_data:
#  keydb_data:
